{"version":3,"sources":["Components/Elements/Header.js","Components/Elements/Footer.js","Components/Pages/TripsPage.js","Components/Pages/ExpensesPage.js","Components/Elements/CreateDialog.js","Components/Elements/TripForm.js","routers/AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","breadcrumbs","display","justifyContent","paddingTop","paddingBottom","flex","classes","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Menu","Typography","variant","className","Button","Breadcrumbs","separator","NavigateNext","fontSize","Footer","this","props","toggleCreateDialogOpen","appBar","Fab","fabButton","onClick","Add","Component","top","bottom","grow","flexGrow","zIndex","left","right","margin","theme","flexCenter","centerContent","height","paper","padding","overflowY","trips","Grid","container","direction","alignItems","justify","item","xs","Paper","align","style","CreateDialog","open","children","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","TripForm","state","title","handleTitleChange","event","target","value","setState","onSubmit","trip","prevProps","prevTrip","_id","TextField","label","onChange","fullWidth","disabled","AppRouter","createDialogOpen","prevState","handleTripFormSubmit","a","fetch","method","body","JSON","stringify","responseObj","json","response","console","log","path","component","TripsPage","exact","ExpensesPage","App","toggleCreateDialog","CssBaseline","Boolean","window","location","hostname","match","createMuiTheme","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8fed845.chunk.js","sourcesContent":["import React, { Fragment} from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar, IconButton, Typography, Button, Breadcrumbs } from '@material-ui/core';\nimport { Menu, NavigateNext } from '@material-ui/icons'; \n\nconst styles = {\n    breadcrumbs: {\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: '10px',\n        paddingBottom: '10px'\n    },\n    flex: {\n        flex: 1\n    }\n}\n\nconst Header = ({ classes }) => (\n    <Fragment>\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                    <Menu />\n                </IconButton>\n                <Typography variant=\"h5\" className={classes.flex}>\n                    Trip Tracker\n                </Typography>\n                <Button color=\"inherit\">Login</Button>\n            </Toolbar>\n        </AppBar>\n        <Breadcrumbs separator={<NavigateNext fontSize=\"small\" />} aria-label=\"breadcrumb\" className={classes.breadcrumbs}>\n            <Typography color=\"textPrimary\">Trips</Typography>\n        </Breadcrumbs>\n    </Fragment>\n);\n\nexport default withStyles(styles)(Header);","import React, { Component, Fragment} from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { AppBar, Toolbar, Fab } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\n\n\nconst styles = {\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n      },\n      grow: {\n        flexGrow: 1,\n      },\n      fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -30,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n      }\n}\n\nclass Footer extends Component {\n    \n\n    render(){\n        const { classes, toggleCreateDialogOpen } = this.props;\n\n        return (\n            <Fragment>\n                <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n                    <Toolbar>\n                    <Fab \n                        color=\"secondary\" \n                        aria-label=\"add\" \n                        className={classes.fabButton} \n                        onClick={toggleCreateDialogOpen}\n                    >\n                        <Add />\n                    </Fab>\n                    </Toolbar>\n                </AppBar>\n            </Fragment>);\n    }\n}\n\nexport default withStyles(styles)(Footer);","import React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid, Paper, Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n    breadcrumbs: {\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: '10px',\n        paddingBottom: '10px'\n    },\n    flexCenter: {\n        display: 'flex',\n        flex: 1,\n        justifyContent: 'center'\n    },\n    centerContent: {\n        flex: 1,\n        height: 'calc(100% - 56px - 56px)'\n    },\n    paper: { \n        padding: 20,  \n        overflowY: 'auto',\n        height: '100%', \n    }\n})\n\nconst TripsPage = ({ trips, classes }) => {\n\n\n    return (\n        <Fragment>\n            <Grid container direction='column' alignItems='center' justify='center' className={classes.centerContent}>\n                <Grid item xs={12}>\n                    \n                </Grid>\n                <Grid container direction='row' justify='center' alignItems='center'>\n                    { trips \n                        ?   <Grid item xs={12}>\n                                <Paper>Your Trips</Paper>\n                            </Grid>\n                        \n                        :   <Grid item xs={10}>\n                                <Paper className={classes.paper}>\n                                    <Typography variant='subtitle1' align='center' style={{color: '#7b7b7b'}}>\n                                        Add your first trip!\n                                    </Typography>\n                                </Paper>\n                            </Grid>\n                    }\n                </Grid>\n            </Grid>\n        </Fragment>\n        \n    )\n}\n    \n\n\nexport default withStyles(styles)(TripsPage);","import React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { Grid, Paper, Typography } from '@material-ui/core';\n\nconst styles = theme => ({\n    breadcrumbs: {\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: '10px',\n        paddingBottom: '10px'\n    },\n    flexCenter: {\n        display: 'flex',\n        flex: 1,\n        justifyContent: 'center'\n    },\n    centerContent: {\n        flex: 1,\n        height: 'calc(100% - 56px - 56px)'\n    },\n    paper: { \n        padding: 20,  \n        overflowY: 'auto',\n        height: '100%', \n    }\n})\n\nconst TripsPage = ({ trips, classes }) => {\n\n\n    return (\n        <Fragment>\n            <Grid container direction='column' alignItems='center' justify='center' className={classes.centerContent}>\n                <Grid item xs={12}>\n                    \n                </Grid>\n                <Grid container direction='row' justify='center' alignItems='center'>\n                    { trips \n                        ?   <Grid item xs={12}>\n                                <Paper>Your Trips</Paper>\n                            </Grid>\n                        \n                        :   <Grid item xs={10}>\n                                <Paper className={classes.paper}>\n                                    <Typography variant='subtitle1' align='center' style={{color: '#7b7b7b'}}>\n                                        Add your first trip!\n                                    </Typography>\n                                </Paper>\n                            </Grid>\n                    }\n                </Grid>\n            </Grid>\n        </Fragment>\n        \n    )\n}\n    \n\n\nexport default withStyles(styles)(TripsPage);","import React from 'react';\n\nimport { Dialog, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\n\nconst CreateDialog = ({ open, toggleCreateDialogOpen, children }) => (\n            <Dialog open={ open } onClose={ toggleCreateDialogOpen }>\n                <DialogTitle id=\"form-dialog-title\">Create a New Trip</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Fill out the form below.\n                    </DialogContentText>\n                    { children }\n                </DialogContent>\n            </Dialog>)\n\n\nexport default CreateDialog;","import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\n\n\nclass TripForm extends Component {\n\n    state = {\n        title: '',\n    };\n\n    componentDidMount(){\n        const { trip } = this.props;\n\n        trip && this.setState(() => ({\n            title: trip.title\n        }));\n    };\n\n    componentDidUpdate(prevProps){\n        const { trip: prevTrip} = prevProps;\n        const { trip } = this.props;\n\n        if (prevTrip && prevTrip._id !== trip._id){\n            this.setState(() => ({\n                title: trip.title\n            }))\n        }\n    }\n\n    handleTitleChange = (event) => {\n        const title = event.target.value;\n        this.setState(() => ({\n            title\n        }));\n    }\n\n    onSubmit = () => {\n\n        this.props.onSubmit({\n            ...this.state\n        });\n\n        this.setState(() => ({ \n            title: ''\n        }));\n    }\n\n    render() {\n\n        const { title } = this.state;\n\n        return (\n            <form>\n                <TextField\n                    label='Trip Title'\n                    value={title}\n                    onChange={this.handleTitleChange}\n                    margin='normal'\n                    fullWidth\n                />\n                <Button \n                    color=\"primary\" \n                    variant='contained'\n                    onClick={this.onSubmit}\n                    disabled={!title}\n                >\n                    {this.props.trip ? 'Edit' : 'Create'}\n                </Button>\n            </form>\n        )\n    }\n};\n\nexport default TripForm;","import React, { Component, Fragment } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Header from '../Components/Elements/Header';\nimport Footer from '../Components/Elements/Footer';\nimport TripsPage from '../Components/Pages/TripsPage';\nimport ExpensesPage from '../Components/Pages/ExpensesPage';\nimport CreateDialog from '../Components/Elements/CreateDialog';\nimport TripForm from '../Components/Elements/TripForm';\n\n\n\nclass AppRouter extends Component{\n\n    state = {\n        createDialogOpen: false\n    }\n\n    toggleCreateDialogOpen = () => {\n        this.setState((prevState) => ({ createDialogOpen: !prevState.createDialogOpen }));\n    }\n\n    handleTripFormSubmit = async (trip) => {\n        this.toggleCreateDialogOpen();\n\n        try {\n            const responseObj = await fetch('/create_trip', {\n                method: 'POST',\n                body: JSON.stringify(trip)\n            });\n            const response = await responseObj.json();\n            console.log(\"RESPONSE!: \", response);\n        } catch(err){\n            console.log('Error creating trip, ', err);\n        }\n        \n        \n    }\n\n    render(){\n        return (\n        <BrowserRouter>\n            <Fragment>\n                <Header />\n                    <Switch>\n                        <Route path='/' component={TripsPage} exact={true}/>\n                        <Route path='/:trip/expenses' component={ExpensesPage} />\n                    </Switch>\n                <Footer \n                    toggleCreateDialogOpen={this.toggleCreateDialogOpen}\n                />\n                <CreateDialog \n                    open={this.state.createDialogOpen} \n                    toggleCreateDialogOpen={this.toggleCreateDialogOpen} \n                >\n                    <TripForm onSubmit={this.handleTripFormSubmit}/>\n                </CreateDialog>\n            </Fragment>\n        </BrowserRouter>)\n    }\n\n};\n    \nexport default AppRouter;","import React, { Component, Fragment } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { withStyles } from '@material-ui/styles';\nimport 'typeface-roboto';\n\nimport AppRouter from './routers/AppRouter';\n\nconst styles = theme => ({\n  '@global': {\n    'html, body, #root': {\n        height: '100%'\n    }\n  }\n});\n\nclass App extends Component {\n\n  state = {\n    createDialogOpen: false\n  }\n\n  toggleCreateDialog = () => this.setState((prevState) => ({ createDialogOpen: !prevState.createDialogOpen}))\n\n  render(){\n    return (\n      <Fragment>\n        <CssBaseline>\n          <AppRouter \n            toggleCreateDialog={this.toggleCreateDialog}\n          />\n        </CssBaseline>\n      </Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme();\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <App />\n    </MuiThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}